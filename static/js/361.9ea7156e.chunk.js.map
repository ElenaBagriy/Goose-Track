{"version":3,"file":"static/js/361.9ea7156e.chunk.js","mappings":"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","sources":["components/MainLayoutComponents/SideBar/LogoutButton/LogoutButton.styled.jsx","components/MainLayoutComponents/SideBar/LogoutButton/LogoutButton.jsx","components/MainLayoutComponents/SideBar/SideBar.styled.jsx","components/MainLayoutComponents/SideBar/UserNav/UserNav.styled.jsx","components/MainLayoutComponents/SideBar/UserNav/UserNav.jsx","components/MainLayoutComponents/SideBar/Logo/Logo.styled.jsx","components/MainLayoutComponents/SideBar/Logo/Logo.jsx","components/MainLayoutComponents/SideBar/SideBar.jsx","components/MainLayoutComponents/Header/ThemeToggler/ThemeToggler.styled.jsx","components/MainLayoutComponents/Header/ThemeToggler/ThemeToggler.jsx","components/MainLayoutComponents/Header/UserInfo/UserInfo.styled.jsx","components/MainLayoutComponents/Header/UserInfo/UserInfo.jsx","components/MainLayoutComponents/Header/Header.styled.jsx","components/MainLayoutComponents/Header/FeedbackButton/FeedbackButton.styled.jsx","components/MainLayoutComponents/Header/FeedbackButton/FeedbackButton.jsx","components/MainLayoutComponents/BurgerMenu/BurgerMenu.styled.jsx","components/MainLayoutComponents/BurgerMenu/BurgerMenu.jsx","components/MainLayoutComponents/Header/Header.jsx","shared/services/onCapitalise.js","shared/services/reusableComponents/Container/Container.styled.jsx","shared/services/reusableComponents/Container/Container.jsx","pages/MainLayout/MainLayout.styled.jsx","pages/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\n\nconst flipVerticalLeft =  keyframes`\n    0% {\n        -webkit-transform:rotateY(0);\n        transform:rotateY(0)\n    }\n\n    25% {\n        -webkit-transform:rotateY(-90deg);\n        transform:rotateY(-90deg)\n    }\n\n    50% {\n        -webkit-transform:rotateY(-180deg);\n        transform:rotateY(-180deg)\n    }\n\n    75% {\n        -webkit-transform:rotateY(-270deg);\n        transform:rotateY(-270deg)\n    }\n\n    100% {\n        -webkit-transform:rotateY(-360deg);\n        transform:rotateY(-360deg)\n    }\n`\n\nexport const Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 6px;\n    width: 131px;\n    height: 46px;\n    border-radius: 16px;\n    background-color: ${props => props.theme.colors.mainBlue};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    border: none;\n    color: #FFF;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: 1.29; \n    letter-spacing: -0.28px;\n    transition: background-color ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 768px) {\n        width: 141px;\n        height: 56px;\n        gap: 11px;\n        font-size: 18px;\n        line-height: 1.33; \n        letter-spacing: -0.36px;\n    }\n\n    &:hover,\n    &:focus {\n        background-color: ${props => props.theme.button.hover};\n\n        & svg {\n            -webkit-animation: ${flipVerticalLeft} 1s cubic-bezier(0.455, 0.030, 0.515, 0.955) alternate forwards;\n\t        animation: ${flipVerticalLeft} 1s cubic-bezier(0.455, 0.030, 0.515, 0.955) alternate forwards;\n        }\n    }\n`","import { useDispatch } from \"react-redux\";\nimport { Button } from \"./LogoutButton.styled\";\nimport { userLogout } from \"redux/userAuth/userAuthOperations\";\nimport { toast } from \"react-toastify\";\nimport sprite from '../../../../images/svg/sprite.svg';\n\nexport const LogoutButton = () => {\n    const dispatch = useDispatch();\n\n    const onClick = (e) => {\n        dispatch(userLogout())\n        .unwrap()\n        .then(() =>{\n                toast.success('You have logged out successfully');\n            })\n        .catch((error) => {\n            toast.error(error);\n        });;\n    }\n    return  <Button onClick={onClick}>\n        Log out\n        <svg width={20} height={20}>\n            <use href={sprite + '#log-out'}></use>\n        </svg>\n        </Button> \n}","import styled from 'styled-components';\n\nexport const Section = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    background-color: ${props => props.theme.colors.sidebar};\n    max-width: 225px;\n    min-height: 100vh;\n    padding: 24px 20px;\n\n    @media screen and (min-width: 768px) {\n        width: 289px;\n        padding: 24px 32px;\n    }\n\n    @media screen and (min-width: 1400px) {\n        padding: 32px 24px 24px 24px;\n    }\n`;\n\nexport const CloseButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: transparent;\n    border: none;\n    \n    &:hover,\n    &:focus {\n      & svg {\n         stroke: ${props => props.theme.colors.mainBlue};\n      }\n    }\n\n    & svg {\n        width: 24px;\n        height: 24px;\n        stroke: ${props => props.theme.text.header};\n        transition: stroke ${props => props.theme.hover.transition};\n\n        @media screen and (min-width: 768px) {\n            width: 34px;\n            height: 34px;\n        }\n    }\n`;\n\nexport const LogoWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 64px;\n    justify-content: space-between;\n\n    @media screen and (min-width: 1400px) {\n        margin-bottom: 50px;\n    }\n\n    @media screen and (min-width: 1400px) {\n        margin-bottom: 32px;\n    }\n`;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h2`\n    color: ${props => props.theme.text.panel};\n    font-family: Inter;\n    font-size: 12px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n    margin-bottom: 24px;\n\n    @media screen and (min-width: 768px) {\n        font-size: 14px;\n        margin-bottom: 32px;\n    }\n`;\n\nexport const Nav = styled.nav`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n\n    @media screen and (min-width: 768px) {\n        gap: 16px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    display: flex;\n    gap: 8px;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    padding-left: 12px;\n    color: ${props => props.theme.text.nav};\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 600;\n    line-height: normal;\n    border-radius: 8px;\n    transition: background-color ${props => props.theme.hover.transition}, color ${props => props.theme.hover.transition}, fill ${props => props.theme.hover.transition}, stroke ${props => props.theme.hover.transition};\n    \n    &:hover {\n        background-color: ${props => props.theme.hover.linkBg};\n        color: ${props => props.theme.hover.linkText};\n\n        & svg {\n            fill: ${props => props.theme.hover.linkText};\n            stroke: ${props => props.theme.hover.linkText};\n        }\n    }\n    \n    &:focus,\n    &.active {\n        background-color: ${props => props.theme.colors.activeLink};\n        color: ${props => props.theme.text.activeLink};\n\n        & svg {\n            fill: ${props => props.theme.text.activeLink};\n            stroke: ${props => props.theme.text.activeLink};\n        }\n    }\n\n    & svg {\n        fill: ${props => props.theme.text.nav};\n        stroke: ${props => props.theme.text.nav};\n        transition: fill ${props => props.theme.hover.transition}, stroke ${props => props.theme.hover.transition};\n        width: 20px;\n        height: 20px;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 16px;\n        gap: 10px;\n        padding-top: 16px;\n        padding-bottom: 16px;\n        padding-left: 20px;\n\n        & svg {\n            width: 24px;\n            height: 24px;\n        }\n    }\n`;","import { Link, Nav, Title } from \"./UserNav.styled\";\nimport sprite from '../../../../images/svg/sprite.svg';\n\nexport const UserNav = () => {\n    return <div>\n        <Title>User Panel</Title>\n        <Nav>\n            <Link to='/account'>\n                <svg width={24} height={24}>\n                    <use href={sprite + '#user'}></use>\n                </svg>\n                My account\n            </Link>\n            <Link to='/calendar'>\n                <svg width={24} height={24}>\n                    <use href={sprite + '#calendar'}></use>\n                </svg>\n                Calendar</Link>\n            <Link to='/statistics'>\n                <svg width={24} height={24}>\n                    <use href={sprite + '#statistic'}></use>\n                </svg>\n                Statistics</Link>\n        </Nav>\n    </div>\n}","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LogoText = styled.p`\n    color: ${props => props.theme.text.logo};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04), 0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1.38; \n    \n    @media screen and (min-width: 768px) {\n        line-height: 1.5; \n    }\n\n    @media screen and (min-width: 1400px) {\n        font-size: 24px;\n        line-height: 1; \n    }\n`;\n\nexport const AccentText = styled.span`\n    font-style: italic;\n`;\n\nexport const LogoWrapper = styled(NavLink)`\n    display: flex;\n    gap: 6px;\n    align-items: center;\n    transition: scale ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 1400px) {\n        gap: 10px;\n    }\n\n    &:hover,\n    &:focus {\n        scale: 1.1;\n    }\n`;","\nimport { AccentText, LogoText, LogoWrapper } from \"./Logo.styled\";\nimport logoMobile1x from '../../../../images/Logo/logo-mobile@1x.png';\nimport logoMobile2x from '../../../../images/Logo/logo-mobile@2x.png';\nimport logoTablet1x from '../../../../images/Logo/logo-tablet@1x.png';\nimport logoTablet2x from '../../../../images/Logo/logo-tablet@2x.png';\nimport logoDesktop1x from '../../../../images/Logo/logo-desktop@1x.png';\nimport logoDesktop2x from '../../../../images/Logo/logo-desktop@2x.png';\n\n\nexport const Logo = () => {\n    return <LogoWrapper to='/'>\n            <picture>\n                <source \n                    srcSet={`${logoMobile1x} 1x, ${logoMobile2x} 2x`} \n                    media=\"(max-width: 768px)\"/>\n                <source \n                    srcSet={`${logoTablet1x} 1x, ${logoTablet2x} 2x`} \n                    media=\"(max-width: 1399px)\"/>\n                <source \n                    srcSet={`${logoDesktop1x} 1x, ${logoDesktop2x} 2x`} \n                    media=\"(min-width: 1400px)\"/>\n                <img\n                    src={`${logoDesktop1x}`}\n                    alt=\"logo\"\n                />\n            </picture>\n            <LogoText>G<AccentText>oo</AccentText>seTrack</LogoText>\n        </LogoWrapper>\n}","import React from \"react\";\nimport { LogoutButton } from \"./LogoutButton/LogoutButton\";\nimport { CloseButton, LogoWrapper, Section } from \"./SideBar.styled\";\nimport { UserNav } from \"./UserNav/UserNav\";\nimport { useMediaQuery } from \"@mui/material\";\nimport sprite from '../../../images/svg/sprite.svg';\nimport { Logo } from \"./Logo/Logo\";\n\nexport const SideBar = React.forwardRef(function({handleClose}, ref) {\n    const isMobile = useMediaQuery('(max-width: 1279px)');\n    \n    return <Section ref={ref}>\n        <div>\n            <LogoWrapper>\n                <Logo/>\n                {isMobile &&\n                <CloseButton onClick={handleClose}>\n                    <svg width={24} height={24}>\n                        <use href={sprite + '#close'}></use>\n                    </svg>\n                </CloseButton>\n                }\n            </LogoWrapper>\n            <UserNav/>\n        </div>\n        <LogoutButton/>\n    </Section>\n})","import styled from 'styled-components';\n\nexport const TogglerButton = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: transparent;\n    border: none;\n    fill: ${props => props.theme.colors.mainBlue};\n    transition: fill ${props => props.theme.hover.transition}, scale ${props => props.theme.hover.transition};\n\n    &:hover,\n    &:focus {\n        fill: ${props => props.theme.button.hover};\n        scale: 1.1;\n    }\n\n    & svg {\n        width: 24px;\n        height: 24px;\n\n        @media screen and (min-width: 768px) {\n            width: 32px;\n            height: 32px;\n        }\n    }\n`;\n\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectThemeIsLight } from \"redux/selectors\";\nimport { toggle } from \"redux/theme/themeSlise\";\nimport sprite from '../../../../images/svg/sprite.svg';\nimport { TogglerButton } from \"./ThemeToggler.styled\";\n\nexport const ThemeToggler = () => {\n    const themeIsLight = useSelector(selectThemeIsLight);\n    const dispatch = useDispatch();\n\n    const onToggleTheme = (x) => {\n        dispatch(toggle());\n      };\n\n    return <TogglerButton onClick={onToggleTheme}>\n            <svg height=\"32\" width=\"32\">\n            {themeIsLight ? \n                <use href={sprite + '#moon'}></use>\n         : \n                <use href={sprite + '#sun'}></use>\n            }\n            </svg>\n    </TogglerButton>\n}","import styled from 'styled-components';\n\nexport const Name = styled.p`\n    color: ${props => props.theme.text.header};\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1.29;\n\n    @media screen and (min-width: 768px) {\n        font-size: 18px;\n        line-height: 1;\n    }\n`;\n\nexport const ImageWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    border: 1.8px solid ${props => props.theme.colors.mainBlue};;\n    background: lightgray 50% / cover no-repeat;\n    font-family: Inter;\n    font-size: 17px;\n    font-weight: 700;\n    color: ${props => props.theme.colors.mainBlue};\n\n    @media screen and (min-width: 768px) {\n        width: 44px;\n        height: 44px;\n    }\n\n    & img {\n        object-fit: cover;\n        display: block;\n        height: 100%;\n        width: 100%;\n    }\n`;\n\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectUser } from \"redux/selectors\";\nimport { userGetInfo } from \"redux/userAuth/userAuthOperations\";\nimport { ImageWrapper, Name } from \"./UserInfo.styled\";\n\nexport const UserInfo = () => {\n    const dispatch = useDispatch();\n    const {name, image} = useSelector(selectUser);\n\n    useEffect(() => {\n        dispatch(userGetInfo())\n    }, [dispatch]);\n\n    return <>\n      {name && <><Name>{name}</Name>\n        {image && name ? <ImageWrapper><img src={image} alt=\"avatar\"/></ImageWrapper> : \n          <ImageWrapper><span alt={`Avatar ${name}`}>{name[0].toUpperCase()}</span></ImageWrapper>\n        }\n      </>\n      }\n    </>\n}","import styled from 'styled-components';\nimport goose1x from '../../../images/Header/motivationGoose@1x.png';\nimport goose2x from '../../../images/Header/motivationGoose@2x.png';\n\nexport const HeaderStyled = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n`;\n\nexport const Title = styled.h1`\n  display: none;\n\n  @media screen and (min-width: 1400px) {\n    display: block;\n    color: ${props => props.theme.text.input};\n    text-shadow: 0px 9.399999618530273px 57.6875px rgba(0, 0, 0, 0.04), 0px 47px 355px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 32px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 18px;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const TitleWithMotivationWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  /* margin-bottom: 32px; */\n`;\n\nexport const MotivationWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Goose = styled.div`\n    width: 64px;\n    height: 60px;\n    background-image: url(${goose1x});\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${goose2x});\n  }\n`;\n\nexport const Motivation = styled.p`\n  color: ${props => props.theme.text.input};\n  font-family: Inter;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.29;\n\n  & span {\n    color: ${props => props.theme.colors.mainBlue};\n  }\n`;","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  padding: 8px 20px;\n  align-items: center;\n  border: none;\n  border-radius: 10px;\n  color: ${props => props.theme.colors.white};\n  text-align: center;\n  font-family: Inter;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.33; \n  height: 32px;\n  background-color: ${props => props.theme.colors.mainBlue};\n  transition: background-color ${props => props.theme.hover.transition}, box-shadow ${props => props.theme.hover.transition};\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 32px;\n    border-radius: 14px;\n    font-size: 14px;\n    line-height: 1.29; \n    height: 42px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: ${props => props.theme.button.hover};\n    box-shadow: ${props => props.theme.button.boxShadow};\n  }\n`;","import { Button } from \"./FeedbackButton.styled\"\n\nexport const FeedbackButton = () => {\n    \n\n    return <Button>Feedback</Button>\n}","import { Dialog, Modal } from '@mui/material';\nimport styled from 'styled-components';\n\nexport const StyledModal = styled(Modal)`\n  position: fixed;\n  z-index: 1300;\n  inset: 0;\n  transition: scale ${props => props.theme.hover.transition};\n`;\n\nexport const StyledDialog = styled(Dialog)`\n  & .MuiDialogContent-root {\n    padding: 0;\n  }\n\n  & .MuiPaper-root {\n    margin: 0;\n    max-width: fit-content;\n    background-color: transparent;\n    border-radius: 0;\n  }\n\n  & .MuiDialog-container {\n    display: block;\n    height: auto;\n  }\n`;\n\nexport const OpenButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: transparent;\n    border: none;\n\n    &:hover,\n    &:focus {\n      & svg {\n         stroke: ${props => props.theme.colors.mainBlue};\n      }\n    }\n\n    & svg {\n      stroke: ${props => props.theme.text.header};\n      transition: stroke ${props => props.theme.hover.transition};\n    }\n\n    @media screen and (min-width: 768px) {\n      & svg {\n      width: 34px;\n      height: 34px;\n    }\n    }\n`;","import { DialogContent, Slide, useMediaQuery } from \"@mui/material\";\nimport React from \"react\";\nimport { SideBar } from \"../SideBar/SideBar\";\nimport { OpenButton, StyledDialog } from \"./BurgerMenu.styled\";\nimport sprite from '../../../images/svg/sprite.svg'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"right\" ref={ref} {...props} />;\n  });\n  \nexport const BurgerMenu = ({isOpen, handleOpen, handleClose}) => {\n    const ref = React.createRef();\n    const isMobile = useMediaQuery('(max-width: 1279px)');\n\n    return <>\n    <OpenButton onClick={handleOpen}>\n        <svg width={24} height={24}>\n            <use href={sprite + '#menu'}></use>\n        </svg>\n    </OpenButton>\n    <StyledDialog\n        open={isOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogContent>\n\n        </DialogContent>\n        <Slide direction=\"right\" in={isOpen}>\n            <SideBar ismobile={isMobile} handleClose={handleClose} ref={ref}/>\n        </Slide>\n      </StyledDialog>\n    </>\n}","import { onCapitalise } from \"shared/services/onCapitalise\";\nimport { ThemeToggler } from \"./ThemeToggler/ThemeToggler\"\nimport { UserInfo } from \"./UserInfo/UserInfo\"\nimport { useLocation } from \"react-router-dom\";\nimport { Box, Goose, HeaderStyled, Motivation, MotivationWrapper, Title, TitleWithMotivationWrapper, Wrapper } from \"./Header.styled\";\nimport { FeedbackButton } from \"./FeedbackButton/FeedbackButton\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { BurgerMenu } from \"../BurgerMenu/BurgerMenu\";\nimport { useSelector } from \"react-redux\";\nimport { selectTasks } from \"redux/selectors\";\n\nexport const Header = ({isOpen, handleOpen, handleClose}) => {\n    const { pathname } = useLocation();\n    const isMobile = useMediaQuery('(max-width: 1399px)');\n    const tasks = useSelector(selectTasks);\n\n    let title = '';\n\n    if (pathname === '/statistics') {\n        title = onCapitalise(pathname.slice(1, pathname.length));\n    } else if (pathname === '/account') {\n        title = 'User Profile'\n    }\n    else {\n        title = 'Calendar'\n    };\n\n    return <HeaderStyled>\n        {isMobile && <BurgerMenu isOpen={isOpen} handleOpen={handleOpen} handleClose={handleClose}/> }\n        {!isMobile && tasks && title === 'Calendar' ? \n        <TitleWithMotivationWrapper>\n            <Goose/>\n            <MotivationWrapper>\n                <Title>{title}</Title>\n                <Motivation><span>Let's go</span> of the past and focus on the present!</Motivation> \n            </MotivationWrapper>\n        </TitleWithMotivationWrapper> \n        : <Title>{title}</Title> }\n        <Wrapper>\n            <FeedbackButton/>\n            <Box>\n                <ThemeToggler/>\n                <UserInfo/>\n            </Box>\n        </Wrapper>\n    </HeaderStyled>\n}","export const onCapitalise = (data) => {\n    return data.charAt(0).toUpperCase() + data.slice(1);\n}","import styled from \"styled-components\";\n\nexport const StyledContainer = styled.div`\n  flex-grow: 1;\n  max-width: 375px;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 24px;\n  margin: 0 auto;\n  \n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 25px;\n  };\n  \n  @media screen and (min-width: 1400px) {\n    max-width: 1440px;\n    padding-left: 24px;\n    padding-right: 32px;\n    padding-top: 40px;\n  }\n`;","import { StyledContainer } from \"./Container.styled\";\nimport PropTypes from 'prop-types';\n\nexport const Container = ({ children }) => {\n    return <StyledContainer>{children}</StyledContainer>\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};","import styled from 'styled-components';\n\nexport const Background = styled.div`\n    display: flex;\n    background-color: ${props => props.theme.colors.background};\n`","import { SideBar } from \"components/MainLayoutComponents/SideBar/SideBar\";\nimport { Header } from \"components/MainLayoutComponents/Header/Header\";\nimport { Suspense, useState } from \"react\";\nimport { Outlet } from \"react-router-dom\";\nimport { Container } from \"shared/services/reusableComponents/Container/Container\";\nimport { Background } from \"./MainLayout.styled\";\nimport { useMediaQuery } from \"@mui/material\";\n\nconst MainLayout = () => {\n    const isMobile = useMediaQuery('(max-width: 1399px)');\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return <Background>\n        {!isMobile && <SideBar handleClose={handleClose}/> }\n        <Container>\n            <Header isOpen={open} handleOpen={handleOpen} handleClose={handleClose}/>\n            <Suspense>\n                <Outlet />\n            </Suspense>\n        </Container>\n    </Background>;\n};\n\nexport default MainLayout;"],"names":["flipVerticalLeft","keyframes","_templateObject","_taggedTemplateLiteral","Button","styled","_templateObject2","props","theme","colors","mainBlue","hover","transition","button","LogoutButton","dispatch","useDispatch","_jsxs","onClick","e","userLogout","unwrap","then","toast","catch","error","children","_jsx","width","height","href","sprite","Section","sidebar","CloseButton","text","header","LogoWrapper","_templateObject3","Title","panel","Nav","Link","NavLink","nav","linkBg","linkText","activeLink","UserNav","to","LogoText","logo","AccentText","Logo","srcSet","concat","media","logoDesktop1x","src","alt","SideBar","React","_ref","ref","handleClose","isMobile","useMediaQuery","TogglerButton","ThemeToggler","themeIsLight","useSelector","selectThemeIsLight","x","toggle","Name","ImageWrapper","UserInfo","_useSelector","selectUser","name","image","useEffect","userGetInfo","_Fragment","toUpperCase","HeaderStyled","input","Box","Wrapper","_templateObject4","TitleWithMotivationWrapper","_templateObject5","MotivationWrapper","_templateObject6","Goose","_templateObject7","Motivation","_templateObject8","white","boxShadow","FeedbackButton","StyledDialog","Modal","Dialog","OpenButton","Transition","Slide","_objectSpread","direction","BurgerMenu","isOpen","handleOpen","open","TransitionComponent","keepMounted","onClose","DialogContent","in","ismobile","Header","data","pathname","useLocation","tasks","selectTasks","title","slice","length","charAt","StyledContainer","Container","Background","background","_useState","useState","_useState2","_slicedToArray","setOpen","Suspense","Outlet"],"sourceRoot":""}