{"version":3,"file":"static/js/300.9d97ef6f.chunk.js","mappings":"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","sources":["components/CalendarComponents/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.styled.jsx","shared/services/formatURLDate.js","components/CalendarComponents/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarComponents/CalendarToolbar/CalendarToolbar.styled.jsx","components/CalendarComponents/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.jsx","components/CalendarComponents/CalendarToolbar/PeriodPaginator/PeriodPaginator.jsx","../node_modules/date-fns/esm/add/index.js","shared/services/usePeriodTypeFromPath.js","components/CalendarComponents/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const TypeNav = styled.nav`\n    display: flex;\n`;\n\nexport const DayButton = styled(NavLink)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 76px;\n    height: 34px;\n    color: ${props => props.isactive ? props.theme.text.activeLink : props.theme.colors.mainBlue};\n    text-align: center;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.29; \n    border-radius: 0px 8px 8px 0px;\n    background-color: ${props => props.isactive ? props.theme.tablet.active : props.theme.tablet.unactive};\n    transition: box-shadow ${props => props.theme.hover.transition};\n\n    &:focus, \n    &:hover{\n        box-shadow: ${props => props.theme.button.boxShadow};\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 82px;\n        font-size: 16px;\n        line-height: 1.13; \n    }\n`;\n\nexport const MonthButton = styled(NavLink)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 76px;\n    height: 34px;\n    color: ${props => props.isactive ? props.theme.text.activeLink : props.theme.colors.mainBlue};\n    text-align: center;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: 1.29; \n    border-radius: 8px 0px 0px 8px;\n    border-right: 1px solid ${props => props.theme.tablet.divider};\n    background-color: ${props => props.isactive ? props.theme.tablet.active : props.theme.tablet.unactive};\n    transition: box-shadow ${props => props.theme.hover.transition};\n\n    &:focus, \n    &:hover{\n        box-shadow: ${props => props.theme.button.boxShadow};\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 82px;\n        font-size: 16px;\n        line-height: 1.13; \n    }\n`;\n","import { format } from 'date-fns';\n\nexport const formatURLDate = (type, date) => {\n    const newDate =\n      type === 'month' ? format(date, 'yyyy-MM') : format(date, 'yyyy-MM-dd');\n      return newDate\n  };","import { useParams } from \"react-router-dom\";\nimport { DayButton, MonthButton, TypeNav } from \"./PeriodTypeSelect.styled\";\nimport { formatURLDate } from \"shared/services/formatURLDate\";\n\nexport const PeriodTypeSelect = ({onChangeType, date}) => {\n    const { currentDay, currentMonth } = useParams();\n\n    const setDateURL = (type) => {\n        const newDate = formatURLDate(type, date);\n        return `${type}/${newDate}`;\n    };\n\n    return <TypeNav>\n    <MonthButton to={setDateURL('month')} onClick={() => onChangeType('month')} isactive={currentMonth}>Month</MonthButton>\n    <DayButton to={setDateURL('day')} onClick={() => onChangeType('day')} isactive={currentDay}>Day</DayButton>\n    </TypeNav>\n}","import styled from 'styled-components';\n\nexport const Box = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 18px;\n    margin-top: 64px;\n    margin-bottom: 24px;\n\n  @media screen and (min-width: 768px) {\n      flex-direction: row;\n      gap: 0;\n      justify-content: space-between;\n      margin-top: 65px;\n      margin-bottom: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-top: 32px;\n  }\n`;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    @media screen and (min-width: 768px) {\n        justify-content: flex-start;\n        gap: 8px;\n    }\n`;\n\nexport const Date = styled.p`\n    display: flex;\n    padding: 6px 12px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.colors.mainBlue};\n    color:${props => props.theme.colors.white};\n    text-align: center;\n    font-family: Inter;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 1.29;\n    text-transform: uppercase;\n\n    @media screen and (min-width: 768px) {\n        padding: 8px 12px;\n        font-size: 14px;\n        line-height: 1.13;\n    }\n`;\n\nexport const ButtonList = styled.ul`\n    display: flex;\n`;\n\nexport const DecreaseButton = styled.button`\n    width: 36.5px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${props => props.theme.colors.page};\n    border: 1px solid ${props => props.theme.button.border};\n    border-top-left-radius: 8px;\n    border-bottom-left-radius: 8px;\n    transition: background-color ${props => props.theme.hover.transition}, box-shadow ${props => props.theme.hover.transition};\n    \n\n    & svg {\n        width: 16px;\n        height: 16px;\n        stroke: ${props => props.theme.text.header};\n        transition: stroke ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 768px) {\n        width: 18px;\n        height: 18px;\n    }\n    }\n\n    &:hover,\n    &:focus {\n        box-shadow: ${props => props.theme.button.boxShadow};\n        & svg {\n            /* stroke: ${props => props.theme.colors.white}; */\n        }\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 38.5px;\n        height: 34px;\n    }\n`;\n\nexport const IncreaseButton = styled.button`\n    width: 35.5px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${props => props.theme.colors.page};\n    border: 1px solid ${props => props.theme.button.border};\n    border-left: none;\n    border-top-right-radius: 8px;\n    border-bottom-right-radius: 8px;\n    transition: background-color ${props => props.theme.hover.transition}, box-shadow ${props => props.theme.hover.transition};\n\n    \n    & svg {\n        width: 16px;\n        height: 16px;\n        stroke: ${props => props.theme.text.header};\n        transition: stroke ${props => props.theme.hover.transition};\n\n        @media screen and (min-width: 768px) {\n        width: 18px;\n        height: 18px;\n    }\n    }\n\n    &:hover,\n    &:focus {\n        /* background-color: ${props => props.theme.colors.mainBlue}; */\n        box-shadow: ${props => props.theme.button.boxShadow};\n        & svg {\n            /* stroke: ${props => props.theme.colors.white}; */\n        }\n    }\n\n    @media screen and (min-width: 768px) {\n        width: 38.5px;\n        height: 34px;\n    }\n`;","import { ButtonList, Date, DecreaseButton, IncreaseButton, Wrapper } from \"./PeriodPaginator.styled\";\nimport sprite from '../../../../images/svg/sprite.svg';\nimport { format } from 'date-fns';\n\nexport const PeriodPaginator = ({type, date, changeDate}) => {\n\n\n    const formatMonth = (type, date) => {\n        const newDate =\n        type === 'month' ? format(date, 'MMMM') : format(date, 'dd MMMM');\n        return newDate\n    };\n    \n    const formatYear = (date) => format(date, 'yyyy');\n\n    const month = formatMonth(type, date);\n    const year = formatYear(date);\n\n    return <Wrapper>\n    <Date>{month} {year}</Date>\n    <ButtonList>\n        <li>\n            <DecreaseButton onClick={() => changeDate(-1)}>\n            <svg width={18} height={18}>\n                <use href={sprite + '#chevron-left'}></use>\n            </svg>\n            </DecreaseButton>\n        </li>\n        <li>\n            <IncreaseButton onClick={() => changeDate(+1)}>\n            <svg width={18} height={18}>\n                <use href={sprite + '#chevron-right'}></use>\n            </svg>\n            </IncreaseButton>\n        </li>\n    </ButtonList>\n    </Wrapper>\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport addDays from \"../addDays/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name add\n * @category Common Helpers\n * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @description\n * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n *\n * | Key            | Description                        |\n * |----------------|------------------------------------|\n * | years          | Amount of years to be added        |\n * | months         | Amount of months to be added       |\n * | weeks          | Amount of weeks to be added        |\n * | days           | Amount of days to be added         |\n * | hours          | Amount of hours to be added        |\n * | minutes        | Amount of minutes to be added      |\n * | seconds        | Amount of seconds to be added      |\n *\n * All values default to 0\n *\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add the following duration to 1 September 2014, 10:19:50\n * const result = add(new Date(2014, 8, 1, 10, 19, 50), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30,\n * })\n * //=> Thu Jun 15 2017 15:29:20\n */\nexport default function add(dirtyDate, duration) {\n  requiredArgs(2, arguments);\n  if (!duration || _typeof(duration) !== 'object') return new Date(NaN);\n  var years = duration.years ? toInteger(duration.years) : 0;\n  var months = duration.months ? toInteger(duration.months) : 0;\n  var weeks = duration.weeks ? toInteger(duration.weeks) : 0;\n  var days = duration.days ? toInteger(duration.days) : 0;\n  var hours = duration.hours ? toInteger(duration.hours) : 0;\n  var minutes = duration.minutes ? toInteger(duration.minutes) : 0;\n  var seconds = duration.seconds ? toInteger(duration.seconds) : 0;\n\n  // Add years and months\n  var date = toDate(dirtyDate);\n  var dateWithMonths = months || years ? addMonths(date, months + years * 12) : date;\n\n  // Add weeks and days\n  var dateWithDays = days || weeks ? addDays(dateWithMonths, days + weeks * 7) : dateWithMonths;\n\n  // Add days, hours, minutes and seconds\n  var minutesToAdd = minutes + hours * 60;\n  var secondsToAdd = seconds + minutesToAdd * 60;\n  var msToAdd = secondsToAdd * 1000;\n  var finalDate = new Date(dateWithDays.getTime() + msToAdd);\n  return finalDate;\n}","import { useLocation } from 'react-router-dom';\n\nconst usePeriodTypeFromPath = () => {\n  const location = useLocation();\n  const pathArray = location.pathname.split('/');\n  return pathArray[2];\n};\n\nexport default usePeriodTypeFromPath;","import { useMemo, useState } from \"react\";\nimport { PeriodTypeSelect } from \"./PeriodTypeSelect/PeriodTypeSelect\";\nimport { Box } from \"./CalendarToolbar.styled\";\nimport { PeriodPaginator } from \"./PeriodPaginator/PeriodPaginator\";\nimport { add } from 'date-fns';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { formatURLDate } from \"shared/services/formatURLDate\";\nimport usePeriodTypeFromPath from \"shared/services/usePeriodTypeFromPath\";\n\nexport const CalendarToolbar = () => {\n    const navigate = useNavigate();\n    const periodType = usePeriodTypeFromPath();\n    const { currentMonth, currentDay } = useParams();\n\n    const dateFromUrl = periodType === 'month' ? currentMonth : currentDay;\n\n    const convertMonthDateStringToDateObject = str => {\n        const [year, month] = str.split('-');\n        const day = new Date().getDate();\n        const date = new Date(`${year}-${month}-${day}`);\n        return date;\n    };\n\n    const convertDayDateStringToDateObject = str => {\n        return new Date(str);\n    };\n\n    const dateObject = useMemo(\n        () => {\n            if (!currentMonth && !currentDay) {\n                return new Date();\n            }\n\n            if (periodType === 'month') {\n                return convertMonthDateStringToDateObject(dateFromUrl)\n            }\n            return convertDayDateStringToDateObject(dateFromUrl)\n\n        }, [currentMonth, currentDay, dateFromUrl, periodType])\n       \n        \n    const [type, setType] = useState(periodType);\n    const [date, setDate] = useState(dateObject);\n\n    const onDateChange = (number) => {\n        let result;\n        if (type === 'month') {\n            result = add(date, {\n                months: +number,\n            })\n\n            setDate(result);      \n        };\n\n        if (type === 'day') {\n            result = add(date, {\n                days: +number,\n            })\n            setDate(result);      \n        }\n            \n        const formatDate = formatURLDate(type, result);\n        navigate(`/calendar/${type}/${formatDate}`)\n        \n    }\n\n    return <Box>\n    <PeriodPaginator type={type} date={date} changeDate={onDateChange}></PeriodPaginator>\n    <PeriodTypeSelect onChangeType={setType} date={date}></PeriodTypeSelect>\n    </Box>\n}","import { CalendarToolbar } from \"components/CalendarComponents/CalendarToolbar/CalendarToolbar\";\nimport { Suspense, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Navigate, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport { getTasksList } from \"redux/tasks/tasksOperations\";\nimport { formatURLDate } from \"shared/services/formatURLDate\";\n\nconst CalendarPage = () => {\n    const dispatch = useDispatch();\n    const { currentDay, currentMonth } = useParams();\n    const location = useLocation();\n    const currentMonthPath = formatURLDate('month', new Date());\n\n    const isValidDate = dateString => {\n        const date = new Date(dateString);\n        return !isNaN(date);\n    };\n    \n    const path = location.pathname;\n    const paramsFormat = Object.keys(useParams()).join('');\n    const urlString = paramsFormat === 'currentDay' ? currentDay : currentMonth;\n\n\n    useEffect(() => {\n        dispatch(getTasksList())\n    }, [dispatch]);\n\n    if (!isValidDate(urlString)) {\n        return <Navigate replace to={`/calendar/month/${currentMonthPath}`} />;\n      }\n      if (path.match(/calendar(\\/)?$/)) {\n        return <Navigate replace to={`/calendar/month/${currentMonthPath}`} />;\n      }\n\n\n    return <>\n\n        <CalendarToolbar/>\n        <Suspense fallback={<div>Loading...</div>}>\n            <Outlet/>\n        </Suspense>\n    </>;\n};\n\nexport default CalendarPage;"],"names":["TypeNav","styled","_templateObject","_taggedTemplateLiteral","DayButton","NavLink","_templateObject2","props","isactive","theme","text","activeLink","colors","mainBlue","tablet","active","unactive","hover","transition","button","boxShadow","MonthButton","_templateObject3","divider","formatURLDate","type","date","format","PeriodTypeSelect","_ref","onChangeType","_useParams","useParams","currentDay","currentMonth","setDateURL","newDate","concat","_jsxs","children","_jsx","to","onClick","Box","Wrapper","Date","white","ButtonList","DecreaseButton","_templateObject4","page","border","header","IncreaseButton","_templateObject5","PeriodPaginator","changeDate","month","formatMonth","year","formatYear","width","height","href","sprite","add","dirtyDate","duration","requiredArgs","arguments","_typeof","NaN","years","toInteger","months","weeks","days","hours","minutes","seconds","toDate","dateWithMonths","addMonths","dateWithDays","addDays","minutesToAdd","secondsToAdd","msToAdd","finalDate","getTime","useLocation","pathname","split","CalendarToolbar","navigate","useNavigate","periodType","usePeriodTypeFromPath","dateFromUrl","dateObject","useMemo","str","_str$split","_str$split2","_slicedToArray","day","getDate","convertMonthDateStringToDateObject","_useState","useState","_useState2","setType","_useState3","_useState4","setDate","number","result","formatDate","dispatch","useDispatch","location","currentMonthPath","path","urlString","Object","keys","join","useEffect","getTasksList","dateString","isNaN","isValidDate","match","Navigate","replace","_Fragment","Suspense","fallback","Outlet"],"sourceRoot":""}