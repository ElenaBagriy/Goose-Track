{"version":3,"file":"static/js/842.70577c28.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.jsx","pages/LoginPage/LoginPage.jsx","shared/services/reusableComponents/AuthNavigate/AuthNavigate.styled.jsx","shared/services/reusableComponents/AuthNavigate/AuthNavigate.jsx","shared/services/validation.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n    width: 335px;\n    padding: 40px 24px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.colors.white};\n\n    @media screen and (min-width: 768px) {\n        padding: 40px;\n        width: 480px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: ${props => props.theme.colors.mainBlue};\n    text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04), 0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 600;\n    line-height: 1.33;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 40px;\n        font-size: 24px;\n        line-height: 1;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 287px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 600;\n    line-height: normal;\n    color: ${props => {\n        if (props.error && props.touched) {\n            return props.theme.colors.error;\n        } else if (!props.error && props.touched) {\n            return props.theme.colors.success;\n        } \n            return '#111';\n    }};\n\n    &:not(:last-child) {\n        margin-bottom: 24px;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 14px;\n        width: 400px;\n        &:not(:last-child) {\n            margin-bottom: 18px;\n        }\n    }\n`;\n\nexport const StyledField = styled(Field)`\n    height: 46px;\n    border-radius: 8px;\n    padding: 14px;\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.29;  \n    border: 1px solid ${props => {\n        if (props.error && props.touched) {\n            return props.theme.colors.error;\n        } else if (!props.error && props.touched) {\n            return props.theme.colors.success;\n        } \n            return 'rgba(220, 227, 229, 0.60)';\n    }};\n    transition: border ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 768px) {\n        padding: 18px;\n        height: 54px;\n        font-size: 16px;\n        line-height: 1.13;  \n    }\n\n    &::placeholder {\n        color: #DCE3E5;\n    }\n\n    &:hover,\n    &:focus,\n    &:focus-visible {\n        border: 1px solid #111;\n        outline: none;\n    }\n`;\n\nexport const SubmitButton = styled.button`\n    margin: 0 auto;\n    margin-top: 32px;\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    gap: 11px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-radius: 16px;\n    border: none;\n    background-color: ${props => props.theme.colors.mainBlue};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    color: #FFF;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.29;\n    letter-spacing: -0.0175rem;\n    transition: background-color ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 768px) {\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 1.33;\n        letter-spacing: -0.0225rem;\n        padding-top: 16px;\n        padding-bottom: 16px;\n        & svg {\n            width: 20px;\n            height: 20px;\n        }\n    }\n\n    &:hover,\n    &:focus {\n        background-color: ${props => props.theme.button.hover};\n    }\n\n    & svg{\n        stroke: ${(props) => props.theme.colors.white};\n    }\n`;\n\nexport const Error = styled.span`\n    position: absolute;\n    color: ${props => props.theme.colors.error};\n    top: 100%;\n    left: 14px;\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 400;\n    line-height: 1.17;\n\n    @media screen and (min-width: 768px) {\n        left: 18px;\n        font-size: 12px;\n    }\n`;\n\nexport const VisibilityBtn = styled.button`\n      position: absolute;\n      width: 24px;\n      height: 24px;\n      right: 18px;\n      bottom: 11px;\n      background: transparent;\n      border: none;\n\n      @media screen and (min-width: 768px) {\n        bottom: 15px;\n      }\n\n      &:hover,\n      &:focus {\n        & .MuiSvgIcon-root {\n            scale: 1.1;\n        }\n      };\n      \n      & .MuiSvgIcon-root {\n        transition: scale ${props => props.theme.hover.transition};\n        color: ${props => {\n            if (props.error && props.touched) {\n                return props.theme.colors.error;\n            } else if (!props.error && props.touched) {\n                return props.theme.colors.success;\n            } \n            return props.theme.colors.mainBlue;\n        }};\n        }\n`;\n\nexport const SVG = styled.svg`\n    position: absolute;\n    right: 18px;\n    bottom: 11px; \n\n    @media screen and (min-width: 768px) {\n        bottom: 15px; \n    }\n`;","import { ErrorMessage, Formik } from 'formik';\nimport { SubmitButton, Error, Label, StyledField, StyledForm, Title, VisibilityBtn, SVG } from './LoginForm.styled';\nimport { LoginSchema } from 'shared/services/validation';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from 'redux/userAuth/userAuthOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport sprite from '../../images/svg/sprite.svg';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [passwordType, setPasswordType] = useState('password');\n\n    const togglePassword = () => {\n        if (passwordType === 'password') {\n            setPasswordType('text');\n            return;\n        }\n        setPasswordType('password');\n    };\n\n    return <Formik\n        initialValues={{\n            email: '',\n            password: '',\n        }}\n        validationSchema={LoginSchema}\n        validateOnChange={true}\n        validateOnBlur={true}\n        onSubmit={(values, actions) => {\n            dispatch(userLogin(values))\n            .unwrap()\n            .then((res) =>{\n                    toast.success('You have logged in successfully');\n                    actions.resetForm();\n                    navigate('/calendar');\n                })\n            .catch((error) => {\n                toast.error(error);\n            });\n\n        }}\n        >\n            {({ errors, touched, values }) => (\n                <StyledForm>\n                <Title>Log In</Title>\n                <div>\n                <Label error={errors.email} touched={touched.email?.toString()}>\n                    Email\n                    <StyledField name=\"email\" type=\"email\" placeholder=\"Enter email\" value={values.email} error={errors.email} touched={touched.email?.toString()}/>\n                    {!touched.email ? null : \n                    (errors.email && touched.email ? <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#error'}></use>\n                    </SVG> : \n                    <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#success'}></use>\n                    </SVG>)}\n                <ErrorMessage name=\"email\" >{msg => <Error>{msg}</Error>}</ErrorMessage>\n                </Label>\n                <Label error={errors.password} touched={touched.password?.toString()}>\n                    Password\n                    <StyledField name=\"password\" placeholder=\"Enter password\" type={passwordType} value={values.password} error={errors.password} touched={touched.password?.toString()}/>\n                    <VisibilityBtn onClick={togglePassword} error={errors.password} touched={touched.password?.toString()}>\n                  {passwordType === 'password' ? (\n                    <VisibilityOff/>\n                  ) : (\n                    <Visibility/>\n                  )}\n                </VisibilityBtn>\n                <ErrorMessage name=\"password\" >{msg => <Error>{msg}</Error>}</ErrorMessage>\n                </Label>\n                </div>\n                <SubmitButton type=\"submit\">\n                    Log In\n                    <svg height=\"18\" width=\"18\">\n                        <use href={sprite + '#login'}></use>\n                    </svg>\n                </SubmitButton>\n            </StyledForm>\n            )}\n        </Formik>\n};","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport rocket1x from '../../images/LoginPage/rocket@1x.png';\nimport rocket2x from '../../images/LoginPage/rocket@2x.png';\n\nconst expandBounce = keyframes`\n0% {\n  transform: scale(0);\n}\n50% {\n  transform: scale(1.25);\n}\n100% {\n  transform: scale(1);\n}\n`;\n\n\nexport const Section = styled.section`\n    background-color: ${props => props.theme.colors.lightBlue};\n    height: 100vh;\n    padding: 20px;\n`;\n\nexport const FormWrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const Goose = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 369px;\n    height: 447px;\n    background-image: url(${rocket1x});\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${rocket2x});\n  }\n`;\n\n\nexport const SpeechBubble = styled.div`\n    position: absolute;\n    top: 0px;\n    left: 104px;\n    transform: scale(0);\n    animation-name: ${expandBounce};\n    animation-duration: 1s;\n    animation-delay: 1s;\n    animation-fill-mode: forwards;\n    \n    & svg{\n      transform: rotate(18deg);\n    }\n  `;\n\nexport const Text = styled.div`\n    position: absolute;\n    box-sizing: content-box;\n    top: 27.7px;;\n    left: 30.06px;\n    width: 138px;\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.14;\n    overflow: hidden;\n    transform: rotate(18deg);\n    margin: 0 auto;\n    \n    & .accent {\n      color: ${props => props.theme.colors.mainBlue};\n    }\n\n`;\n\nexport const ImageWrapper = styled.div`\n  position: absolute;\n  bottom: 19px;\n  right: 60px;\n  width: 368px;\n  height: 521px;\n`","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport React from 'react';\nimport { AuthNavigate } from 'shared/services/reusableComponents/AuthNavigate/AuthNavigate';\nimport { FormWrapper, Goose, ImageWrapper, Section, SpeechBubble, Text } from './LoginPage.styled';\nimport TypeIt from 'typeit-react';\nimport sprite from '../../images/svg/sprite.svg';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst LoginPage = () => {\n    const matches = useMediaQuery('(min-width: 1400px)');\n\n    return <Section>\n        {matches &&\n        <ImageWrapper>\n            <Goose>\n            </Goose>\n            <SpeechBubble>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"181\" height=\"130\" viewBox=\"0 0 181 130\" fill=\"none\">\n                    <use href={sprite + '#bubble-login'}></use>\n                </svg>\n                <Text>\n                    <TypeIt\n                    as='p'\n                    getBeforeInit={(instance) => {\n                        instance.pause(1050)\n                        .type(\"Quickly come\")\n                        .pause(500)\n                        .delete(4)\n                        .pause(500)\n                        .type(\" <span class='accent'>come in</span> and write down your tasks for the day!\")\n                        return instance;\n                    }}>\n                    </TypeIt>\n                </Text>\n            </SpeechBubble>\n        </ImageWrapper>\n        }\n        <FormWrapper>\n        <LoginForm/>\n        <AuthNavigate link='/register' text='Sign Up'/>\n        </FormWrapper>\n    </Section>;\n};\n\nexport default LoginPage;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigate = styled(NavLink)`\n  margin-top: 18px;\n  display: block;\n  text-align: center;\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04), 0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  text-decoration-line: underline;\n  color: ${props => props.theme.colors.mainBlue};\n  transition: color ${props => props.theme.hover.transition}, scale ${props => props.theme.hover.transition};\n\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.button.hover};\n    scale: 1.01;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Navigate } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({link, text}) => {\n    return <>\n    <Navigate to={link}>{text}</Navigate>\n    </>\n};\n\nAuthNavigate.propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  };","import * as Yup from 'yup';\n\nexport const nameRegExp = new RegExp(\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    );\n  \nexport const passwordRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\nexport const phoneRegExp = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/;\n\nexport const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Name is too Short!')\n    .max(16, 'Name may contain only 16 characters.')\n    .matches(nameRegExp,\"Name may contain only letters, apostrophe, dash and spaces.\")\n    .required('Name is required'),\n    email: Yup.string('Enter your email').email('Enter a valid email').required('Email is required.'),\n    password: Yup.string('Enter your password.')\n    .min(8, 'Password should be of minimum 8 characters length.')\n    .max(16, 'Too Long!').required('Password is required.')\n    .matches(\n        passwordRegExp,\n        'Password must contain minimum 8 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.'\n      ),\n});\n\nexport const LoginSchema = Yup.object().shape({\n    email: Yup.string('Enter your email').email('Enter a valid email').required('Email is required.'),\n    password: Yup.string('Enter your password.')\n    .min(8, 'Password should be of minimum 8 characters length.')\n    .max(16, 'Too Long!').required('Password is required.')\n    .matches(\n        passwordRegExp,\n        'Password must contain minimum 8 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.'\n      ),\n});\n\nexport const userFormSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required.')\n      .matches(nameRegExp, \"Name may contain only letters, apostrophe, dash and spaces.\")\n      .min(2, 'Name is too Short!')\n      .max(16, 'Name may contain only 16 characters.'),\n    phone: Yup.string().matches(phoneRegExp, {\n      message:\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      excludeEmptyString: true,\n    }),\n    birthday: Yup.date('Invalid date format'),\n    skype: Yup.string()\n      .max(16, 'Skype may contain only 16 characters'),\n    email: Yup.string()\n      .email('Enter a valid email.')\n      .required('Email is required.'),\n    image: Yup.mixed().nullable('nullable')\n      .test('is-valid-type', 'Invalid image type', value => {\n        return value === '' || isValidFileType(value)})\n        .test(\n          'is-big-file',\n          'File is too big. Max.size = 70KB',\n          value => checkIfFilesAreTooBig(value)\n        )\n  });\n\n  const validFileExtensions = {\n    image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n  };\n  \n  const isValidFileType = value => {\n    if (value === null) return true;\n    if (typeof value === 'string' && value.includes('image')) return true;\n    if (value) {\n      if (value?.length === 0) return true;\n      const fileName = value[0].name.toLowerCase();\n      return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n    }\n  };\n\n  const checkIfFilesAreTooBig = (file) => {\n    let valid = true;\n\n    if (file.length > 0) {\n        const size = file[0].size / 1024\n        if (size > 70) {\n          valid = false;\n        }\n      }\n    return valid\n  }"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","colors","white","Title","_templateObject2","mainBlue","Label","_templateObject3","error","touched","success","StyledField","Field","_templateObject4","hover","transition","SubmitButton","_templateObject5","button","Error","_templateObject6","VisibilityBtn","_templateObject7","SVG","_templateObject8","LoginForm","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","togglePassword","_jsx","Formik","initialValues","email","password","validationSchema","LoginSchema","validateOnChange","validateOnBlur","onSubmit","values","actions","userLogin","unwrap","then","res","toast","resetForm","catch","children","_ref","_touched$email","_touched$email2","_touched$password","_touched$password2","_touched$password3","errors","_jsxs","toString","name","type","placeholder","value","height","width","href","sprite","ErrorMessage","msg","onClick","VisibilityOff","Visibility","expandBounce","keyframes","Section","lightBlue","FormWrapper","Goose","rocket1x","rocket2x","SpeechBubble","Text","ImageWrapper","matches","useMediaQuery","xmlns","viewBox","fill","TypeIt","as","getBeforeInit","instance","pause","delete","AuthNavigate","link","text","Navigate","NavLink","_Fragment","to","nameRegExp","RegExp","passwordRegExp","SignupSchema","Yup","shape","min","max","required","userFormSchema","phone","message","excludeEmptyString","birthday","skype","image","nullable","test","isValidFileType","checkIfFilesAreTooBig","validFileExtensions","includes","length","fileName","toLowerCase","indexOf","split","pop","file","valid","size"],"sourceRoot":""}