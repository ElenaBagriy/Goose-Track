{"version":3,"file":"static/js/794.6ed78e22.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx","shared/services/reusableComponents/AuthNavigate/AuthNavigate.styled.jsx","shared/services/reusableComponents/AuthNavigate/AuthNavigate.jsx","shared/services/validation.js"],"sourcesContent":["import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n    width: 335px;\n    padding: 40px 24px;\n    border-radius: 8px;\n    background-color: ${props => props.theme.colors.white};\n\n    @media screen and (min-width: 768px) {\n        padding: 40px;\n        width: 480px;\n    }\n`;\n\nexport const Title = styled.h1`\n    margin-bottom: 32px;\n    color: ${props => props.theme.colors.mainBlue};\n    text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04), 0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n    font-family: Inter;\n    font-size: 18px;\n    font-weight: 600;\n    line-height: 1.33;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 40px;\n        font-size: 24px;\n        line-height: 1;\n    }\n`;\n\nexport const Label = styled.label`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    width: 287px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 600;\n    line-height: normal;\n    color: ${props => {\n        if (props.error && props.touched) {\n            return props.theme.colors.error;\n        } else if (!props.error && props.touched) {\n            return props.theme.colors.success;\n        } \n            return '#111';\n    }};\n\n    &:not(:last-child) {\n        margin-bottom: 24px;\n    }\n\n    @media screen and (min-width: 768px) {\n        font-size: 14px;\n        width: 400px;\n        &:not(:last-child) {\n            margin-bottom: 18px;\n        }\n    }\n`;\n\nexport const StyledField = styled(Field)`\n    height: 46px;\n    border-radius: 8px;\n    padding: 14px;\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.29;  \n    transition: border ${props => props.theme.hover.transition};\n    border: 1px solid ${props => {\n        if (props.error && props.touched) {\n            return props.theme.colors.error;\n        } else if (!props.error && props.touched) {\n            return props.theme.colors.success;\n        } \n            return 'rgba(220, 227, 229, 0.60)';\n    }};\n\n    @media screen and (min-width: 768px) {\n        padding: 18px;\n        height: 54px;\n        font-size: 16px;\n        line-height: 1.13;  \n    }\n\n    &::placeholder {\n        color: #DCE3E5;\n    }\n\n    &:hover,\n    &:focus,\n    &:focus-visible {\n        border: 1px solid #111;\n        outline: none;\n    }\n`;\n\nexport const SubmitButton = styled.button`\n    margin: 0 auto;\n    margin-top: 32px;\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    gap: 11px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n    border-radius: 16px;\n    border: none;\n    background-color: ${props => props.theme.colors.mainBlue};\n    box-shadow: 4px 2px 16px 0px rgba(136, 165, 191, 0.48);\n    color: #FFF;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.29;\n    letter-spacing: -0.0175rem;\n    transition: background-color ${props => props.theme.hover.transition};\n\n    @media screen and (min-width: 768px) {\n        margin-top: 48px;\n        font-size: 18px;\n        line-height: 1.33;\n        letter-spacing: -0.0225rem;\n        padding-top: 16px;\n        padding-bottom: 16px;\n\n        & svg {\n            width: 20px;\n            height: 20px;\n        }\n    }\n\n    &:hover,\n    &:focus {\n        background-color: ${props => props.theme.button.hover};\n    }\n\n    & svg{\n        stroke: ${(props) => props.theme.colors.white};\n    }\n`;\n\nexport const Error = styled.span`\n    position: absolute;\n    color: ${props => props.theme.colors.error};\n    top: 100%;\n    left: 14px;\n    font-family: Inter;\n    font-size: 10px;\n    font-weight: 400;\n    line-height: 1.17;\n\n    @media screen and (min-width: 768px) {\n        left: 18px;\n        font-size: 12px;\n    }\n`;\n\nexport const VisibilityBtn = styled.button`\n      position: absolute;\n      width: 24px;\n      height: 24px;\n      right: 18px;\n      bottom: 11px;\n      background: transparent;\n      border: none;\n\n      @media screen and (min-width: 768px) {\n        bottom: 15px;\n      }\n\n      &:hover,\n      &:focus {\n        & .MuiSvgIcon-root {\n            scale: 1.1;\n        }\n      };\n      \n      & .MuiSvgIcon-root {\n        transition: scale ${props => props.theme.hover.transition};\n        color: ${props => {\n            if (props.error && props.touched) {\n                return props.theme.colors.error;\n            } else if (!props.error && props.touched) {\n                return props.theme.colors.success;\n            } \n            return props.theme.colors.mainBlue;\n        }};\n        }\n`;\n\nexport const SVG = styled.svg`\n    position: absolute;\n    right: 18px;\n    bottom: 11px; \n\n    @media screen and (min-width: 768px) {\n        bottom: 15px; \n    }\n`;","import { ErrorMessage, Formik } from 'formik';\nimport { SubmitButton, Error, Label, StyledField, StyledForm, Title, VisibilityBtn, SVG } from './RegisterForm.styled';\nimport { SignupSchema } from 'shared/services/validation';\nimport { useDispatch } from 'react-redux';\nimport { userRegister } from 'redux/userAuth/userAuthOperations';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport sprite from '../../images/svg/sprite.svg';\nimport { useState } from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const [passwordType, setPasswordType] = useState('password');\n\n    const togglePassword = () => {\n        if (passwordType === 'password') {\n            setPasswordType('text');\n            return;\n        }\n        setPasswordType('password');\n    };\n\n    return <Formik\n        initialValues={{\n            name: '',\n            email: '',\n            password: '',\n        }}\n        validationSchema={SignupSchema}\n        validateOnChange={true}\n        validateOnBlur={true}\n        onSubmit={(values, actions) => {\n            dispatch(userRegister(values))\n            .unwrap()\n            .then((res) =>{\n                    toast.success('Thank you for registering! Your account has been created successfully.');\n                    actions.resetForm();\n                    navigate('/calendar');\n                })\n            .catch((error) => {\n                toast.error(error);\n            });\n\n        }}\n        >\n            {({ errors, touched, values }) => {\n                return (<StyledForm>\n                <Title>Sign Up</Title>\n                <div>\n                <Label error={errors.name} touched={touched.name?.toString()}>\n                    Name\n                    <StyledField name=\"name\" placeholder=\"Enter your name\" value={values.name} error={errors.name} touched={touched.name?.toString()}/>\n                    {!touched.name ? null : \n                    (errors.name && touched.name ? <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#error'}></use>\n                    </SVG> : \n                    <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#success'}></use>\n                    </SVG>)}\n                <ErrorMessage name=\"name\" >{msg => <Error>{msg}</Error>}</ErrorMessage>\n                </Label>\n                <Label error={errors.email} touched={touched.email?.toString()}>\n                    Email\n                    <StyledField name=\"email\" type=\"email\" placeholder=\"Enter email\" value={values.email} error={errors.email} touched={touched.email?.toString()}/>\n                    {!touched.email ? null : \n                    (errors.email && touched.email ? <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#error'}></use>\n                    </SVG> : \n                    <SVG height=\"24\" width=\"24\">\n                        <use href={sprite + '#success'}></use>\n                    </SVG>)}\n                <ErrorMessage name=\"email\" >{msg => <Error>{msg}</Error>}</ErrorMessage>\n                </Label>\n                <Label error={errors.password} touched={touched.password?.toString()}>\n                    Password\n                    <StyledField name=\"password\" placeholder=\"Enter password\" value={values.password} type={passwordType} error={errors.password} touched={touched.password?.toString()}/>\n                    <VisibilityBtn onClick={togglePassword} error={errors.password} touched={touched.password?.toString()}>\n                  {passwordType === 'password' ? (\n                    <VisibilityOff />\n                  ) : (\n                    <Visibility />\n                  )}\n                </VisibilityBtn>\n                <ErrorMessage name=\"password\" >{msg => <Error>{msg}</Error>}</ErrorMessage>\n                </Label>\n                </div>\n                <SubmitButton type=\"submit\">\n                    Sign Up\n                    <svg height=\"18\" width=\"18\">\n                        <use href={sprite + '#login'}></use>\n                    </svg>\n                </SubmitButton>\n            </StyledForm>)\n            }}\n        </Formik>\n};","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport goose1x from '../../images/SignUpPage/signUpGoose@1x.png';\nimport goose2x from '../../images/SignUpPage/signUpGoose@2x.png';\n\nconst expandBounce = keyframes`\n0% {\n  transform: scale(0);\n}\n50% {\n  transform: scale(1.25);\n}\n100% {\n  transform: scale(1);\n}\n`;\n\n\nexport const Section = styled.section`\n    background-color: ${props => props.theme.colors.lightBlue};\n    height: 100vh;\n    padding: 20px;\n`;\n\nexport const FormWrapper = styled.div`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const Goose = styled.div`\n    position: absolute;\n    bottom: 0;\n    width: 401px;\n    height: 344px;\n    background-image: url(${goose1x});\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    screen and (min-resolution: 2dppx) {\n      background-image: url(${goose2x});\n  }\n`;\n\n\nexport const SpeechBubble = styled.div`\n    position: absolute;\n    bottom: 233px;\n    left: 30.97px;\n    transform: scale(0);\n    animation-name: ${expandBounce};\n    animation-duration: 1s;\n    animation-delay: 1s;\n    animation-fill-mode: forwards;\n    \n    & svg{\n      transform: rotate(-24deg);\n    }\n  `;\n\nexport const Text = styled.div`\n    position: absolute;\n    box-sizing: content-box;\n    top: 28.67px;;\n    left: 12.8px;\n    width: 141px;\n    color: #111;\n    font-family: Inter;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.14;\n    overflow: hidden;\n    transform: rotate(-27deg);\n    margin: 0 auto;\n    \n    & .accent {\n      color: ${props => props.theme.colors.mainBlue};\n    }\n\n`;\n\nexport const ImageWrapper = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 49px;\n  width: 400px;\n  height: 416px;\n`","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\nimport { AuthNavigate } from 'shared/services/reusableComponents/AuthNavigate/AuthNavigate';\nimport { FormWrapper, Goose, ImageWrapper, Section, SpeechBubble, Text } from './RegisterPage.styled';\nimport sprite from '../../images/svg/sprite.svg';\nimport TypeIt from \"typeit-react\";\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n\nconst RegisterPage = () => {\n    const matches = useMediaQuery('(min-width: 1400px)');\n\n    return <Section>\n        {matches &&\n        <ImageWrapper>\n            <Goose>\n            </Goose>\n                <SpeechBubble>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"181\" height=\"130\" viewBox=\"0 0 181 130\" fill=\"none\">\n                        <use href={sprite + '#bubble'}></use>\n                    </svg>\n                    <Text>\n                        <TypeIt\n                        as='p'\n                        getBeforeInit={(instance) => {\n                            instance.pause(1050)\n                            .type(\"Quickly reg\")\n                            .pause(500)\n                            .delete(3)\n                            .pause(500)\n                            .type(\" <span class='accent'>register</span> and familiarize yourself with the application!\")\n                            return instance;\n                         }}>\n                        </TypeIt>\n                    </Text>\n                </SpeechBubble>\n        </ImageWrapper>\n        }\n        \n        <FormWrapper>\n            <RegisterForm/>\n            <AuthNavigate link='/login' text='Log In'/>\n        </FormWrapper>\n    </Section>;\n};\n\nexport default RegisterPage;","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigate = styled(NavLink)`\n  margin-top: 18px;\n  display: block;\n  text-align: center;\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04), 0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n  font-family: Inter;\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 1.17;\n  text-decoration-line: underline;\n  color: ${props => props.theme.colors.mainBlue};\n  transition: color ${props => props.theme.hover.transition}, scale ${props => props.theme.hover.transition};\n\n  @media screen and (min-width: 768px) {\n    margin-top: 24px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.button.hover};\n    scale: 1.01;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Navigate } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({link, text}) => {\n    return <>\n    <Navigate to={link}>{text}</Navigate>\n    </>\n};\n\nAuthNavigate.propTypes = {\n    link: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n  };","import * as Yup from 'yup';\n\nexport const nameRegExp = new RegExp(\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    );\n  \nexport const passwordRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\nexport const phoneRegExp = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/;\n\nexport const SignupSchema = Yup.object().shape({\n    name: Yup.string()\n    .min(2, 'Name is too Short!')\n    .max(16, 'Name may contain only 16 characters.')\n    .matches(nameRegExp,\"Name may contain only letters, apostrophe, dash and spaces.\")\n    .required('Name is required'),\n    email: Yup.string('Enter your email').email('Enter a valid email').required('Email is required.'),\n    password: Yup.string('Enter your password.')\n    .min(8, 'Password should be of minimum 8 characters length.')\n    .max(16, 'Too Long!').required('Password is required.')\n    .matches(\n        passwordRegExp,\n        'Password must contain minimum 8 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.'\n      ),\n});\n\nexport const LoginSchema = Yup.object().shape({\n    email: Yup.string('Enter your email').email('Enter a valid email').required('Email is required.'),\n    password: Yup.string('Enter your password.')\n    .min(8, 'Password should be of minimum 8 characters length.')\n    .max(16, 'Too Long!').required('Password is required.')\n    .matches(\n        passwordRegExp,\n        'Password must contain minimum 8 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.'\n      ),\n});\n\nexport const userFormSchema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name is required.')\n      .matches(nameRegExp, \"Name may contain only letters, apostrophe, dash and spaces.\")\n      .min(2, 'Name is too Short!')\n      .max(16, 'Name may contain only 16 characters.'),\n    phone: Yup.string().matches(phoneRegExp, {\n      message:\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n      excludeEmptyString: true,\n    }),\n    birthday: Yup.date('Invalid date format'),\n    skype: Yup.string()\n      .max(16, 'Skype may contain only 16 characters'),\n    email: Yup.string()\n      .email('Enter a valid email.')\n      .required('Email is required.'),\n    image: Yup.mixed().nullable('nullable')\n      .test('is-valid-type', 'Invalid image type', value => {\n        return value === '' || isValidFileType(value)})\n        .test(\n          'is-big-file',\n          'File is too big. Max.size = 70KB',\n          value => checkIfFilesAreTooBig(value)\n        )\n  });\n\n  const validFileExtensions = {\n    image: ['jpg', 'gif', 'png', 'jpeg', 'svg', 'webp'],\n  };\n  \n  const isValidFileType = value => {\n    if (value === null) return true;\n    if (typeof value === 'string' && value.includes('image')) return true;\n    if (value) {\n      if (value?.length === 0) return true;\n      const fileName = value[0].name.toLowerCase();\n      return validFileExtensions['image'].indexOf(fileName.split('.').pop()) > -1;\n    }\n  };\n\n  const checkIfFilesAreTooBig = (file) => {\n    let valid = true;\n\n    if (file.length > 0) {\n        const size = file[0].size / 1024\n        if (size > 70) {\n          valid = false;\n        }\n      }\n    return valid\n  }"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","props","theme","colors","white","Title","_templateObject2","mainBlue","Label","_templateObject3","error","touched","success","StyledField","Field","_templateObject4","hover","transition","SubmitButton","_templateObject5","button","Error","_templateObject6","VisibilityBtn","_templateObject7","SVG","_templateObject8","RegisterForm","dispatch","useDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","passwordType","setPasswordType","togglePassword","_jsx","Formik","initialValues","name","email","password","validationSchema","SignupSchema","validateOnChange","validateOnBlur","onSubmit","values","actions","userRegister","unwrap","then","res","toast","resetForm","catch","children","_ref","_touched$name","_touched$name2","_touched$email","_touched$email2","_touched$password","_touched$password2","_touched$password3","errors","_jsxs","toString","placeholder","value","height","width","href","sprite","ErrorMessage","msg","type","onClick","VisibilityOff","Visibility","expandBounce","keyframes","Section","lightBlue","FormWrapper","Goose","goose1x","goose2x","SpeechBubble","Text","ImageWrapper","matches","useMediaQuery","xmlns","viewBox","fill","TypeIt","as","getBeforeInit","instance","pause","delete","AuthNavigate","link","text","Navigate","NavLink","_Fragment","to","nameRegExp","RegExp","passwordRegExp","Yup","shape","min","max","required","LoginSchema","userFormSchema","phone","message","excludeEmptyString","birthday","skype","image","nullable","test","isValidFileType","checkIfFilesAreTooBig","validFileExtensions","includes","length","fileName","toLowerCase","indexOf","split","pop","file","valid","size"],"sourceRoot":""}